openapi: "3.0.3"

info: 
  title: API de Ordens
  description: Documentação da API de ordens do microsserviço order-management-order
  version: 1.0.0

servers:
  - url: http://localhost

tags: 
  - name: Orders
    description: API de ordens

paths:
  /orders:
    post:
      tags: 
        - Orders
      summary: Endpoint de criação de ordem
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateOrderRequestDto"
      responses: 
        '201':
          description: Ordem criada com sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrderResponseDto"
        '400':
          description: Erro de validação de dados
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto1"
    
    get:
      tags: 
        - Orders
      summary: "Busca pedidos com base em filtros"
      description: "Retorna uma lista paginada de pedidos com base nos filtros fornecidos"
      operationId: "findByFilter"
      parameters:
        - name: ids
          in: query
          required: false
          description: "Lista de IDs para filtrar pedidos"
          schema:
            type: string
            example: "1,2,3"
        - name: startDate
          in: query
          required: false
          description: "Data de início para filtrar pedidos"
          schema:
            type: string
            format: date-time
            example: '2024-11-01T19:35:41.00'
        - name: endDate
          in: query
          required: false
          description: "Data de fim para filtrar pedidos"
          schema:
            type: string
            format: date-time
            example: '2024-11-02T19:35:41.00'
        - name: minAmount
          in: query
          required: false
          description: "Valor mínimo para filtrar pedidos"
          schema:
            type: number
            example: 250.25
        - name: maxAmount
          in: query
          required: false
          description: "Valor máximo para filtrar pedidos"
          schema:
            type: number
            example: 500.25
        - name: status
          in: query
          required: false
          description: "Status para filtrar pedidos"
          schema:
            type: array
            items:
              type: string
            example: ["CREATED", "PROCESSED", "REJECTED"]
        - name: name
          in: query
          required: false
          description: "Nome para filtrar pedidos"
          schema:
            type: string
            example: "John Doe"
        - name: cpf
          in: query
          required: false
          description: "CPF para filtrar pedidos"
          schema:
            type: string
            example: "12345678901"
        - name: city
          in: query
          required: false
          description: "Cidade para filtrar pedidos"
          schema:
            type: string
            example: "Limeiras"
        - name: state
          in: query
          required: false
          description: "Estado para filtrar pedidos"
          schema:
            type: string
            example: "SP"
        - name: page
          in: query
          required: false
          description: "Número da página para paginação (inicia em 0)"
          schema:
            type: integer
            default: 0
        - name: size
          in: query
          required: false
          description: "Número de itens por página"
          schema:
            type: integer
            default: 10
        - name: sort
          in: query
          required: false
          description: "Critério de ordenação, no formato 'campo,asc' ou 'campo,desc'"
          schema:
            type: string
            example: "ids.ASC"
      responses: 
        '200':
          description: Lista de ordens encontrada com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      $ref: "#/components/schemas/OrderResponseDto"
                  totalElements:
                    type: integer
                    description: "Total de elementos na consulta"
                  totalPages:
                    type: integer
                    description: "Total de páginas disponíveis"
                    example: 10
                  size:
                    type: integer
                    description: "Número de itens por página"
                    example: 5
                  number:
                    type: integer
                    description: "Número da página atual"
                  first:
                    type: boolean
                    description: "Indica se é a primeira página"
                  last:
                    type: boolean
                    description: "Indica se é a última página"
        '400':
          description: Dados enviados inválidos
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto3"

  /orders/{id}:
    get:
      tags: 
        - Orders
      summary: Endpoint de busca de ordem pelo ID
      parameters:
        - name: id
          in: path
          required: true
          description: "ID do pedido a ser buscado"
          schema:
            type: integer
      responses: 
        '200':
          description: Pedido encontrado com sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrderResponseDto"
        '404':
          description: Ordem não encontrada
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto2"

  /orders/history/{id}:
    get:
      tags: 
        - History
      summary: Endpoint de buscar histórico da ordem pelo order-id
      parameters:
        - name: id
          in: path
          required: true
          description: "ID da ordem a ser buscado o histórico de alterações"
          schema:
            type: integer
      responses: 
        '200':
          description: Lista de histórico encontrado com sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OrderHistoryResponseDto"
        '404':
          description: Ordem não encontrada
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto2"
            


components:
  schemas:
  #Request
    CreateOrderRequestDto:
      type: object
      required: 
      - name
      - cpf
      - address
      - postalCode
      - city
      - state
      - items
      properties:
        name:
          type: string
          description: Nome do cliente
          example: 'John Doe I'
        cpf:
          type: string
          description: CPF do cliente
          example: '12345678901'
        address:
          type: string
          description: Endereço complexo do cliente
          example: 'Rua x, 100 - Bairro x'
        postalCode:
          type: string
          description: Código postal(CEP) do cliente
          example: '12345678'
        city:
          type: string
          description: Cidade do cliente
          example: 'Limeiras'
        state:
          type: string
          description: Unidade federativa que representa o estado do cliente
          example: 'SP'
        items:
          type: array
          description: Items que compõe a ordem.
          items:
            $ref: "#/components/schemas/OrderItemDto"

    OrderItemDto:
      type: object
      required: 
      - name
      - description
      - unityPrice
      - count
      properties:
        name:
          type: string
          description: Nome do item
          example: 'RTX 1600'
        description:
          type: string
          description: Descrição do item
          example: 'Placa de vídeo RTX 1600 gamer de alta resolução'
        unityPrice:
          type: number
          description: Valor unitário do ítem
          example: 2400.25
        count:
          type: integer
          description: Quantidade do ítem
          example: 2

  # Response

    ErrorResponseDto1:
      type: object
      properties:
        errors:
          type: array
          description: Lista de errors
          items: 
            $ref: '#/components/schemas/ErrorDto1'
            
    ErrorDto1:
      type: object
      properties: 
        code:
          type: integer
          description: Código de erro da mensagem
          example: '0311'
        message:
          type: string
          description: mensagem de erro
          example: 'Item name is null or invalid'
          
    ErrorResponseDto2:
      type: object
      properties:
        errors:
          type: array
          description: Lista de errors
          items: 
            $ref: '#/components/schemas/ErrorDto2'
            
    ErrorDto2:
      type: object
      properties: 
        code:
          type: integer
          description: Código de erro da mensagem
          example: '0100'
        message:
          type: string
          description: mensagem de erro
          example: 'Order not found for id: 12345'
    
    ErrorResponseDto3:
      type: object
      properties:
        errors:
          type: array
          description: Lista de errors
          items: 
            $ref: '#/components/schemas/ErrorDto3'
            
    ErrorDto3:
      type: object
      properties: 
        code:
          type: integer
          description: Código de erro da mensagem
          example: '0300'
        message:
          type: string
          description: mensagem de erro
          example: "The startDate and endDate fields must be sent together"

    OrderResponseDto:
      type: object
      properties: 
        id: 
          type: integer
          description: Identificador da ordem
          example: 12345
        createdAt: 
          type: string
          format: date-time
          description: Data de criação da ordem
          example: '2024-11-01T19:35:41.00'
        amount: 
          type: number
          description: Valor total da ordem
          example: 250.25
        status: 
            type: string
            description: Status da ordem
            example: CREATED
        name:
          type: string
          description: Nome do cliente
          example: 'John Doe I'
        cpf:
          type: string
          description: CPF do cliente
          example: '12345678901'
        address:
          type: string
          description: Endereço complexo do cliente
          example: 'Rua x, 100 - Bairro x'
        postalCode:
          type: string
          description: Código postal(CEP) do cliente
          example: '12345678'
        city:
          type: string
          description: Cidade do cliente
          example: 'Limeiras'
        state:
          type: string
          description: Unidade federativa que representa o estado do cliente
          example: 'SP'
        attemptedPaymentAt:
          type: string
          format: date-time
          description: Unidade federativa que representa o estado do cliente
          example: '2024-11-01T19:35:41.00'
        items:
          type: array
          description: Items que compõe a ordem.
          items:
            $ref: "#/components/schemas/OrderItemDto-response"

    OrderHistoryResponseDto:
      type: object
      properties: 
        id: 
          type: string
          format: uuid
          description: Identificador da ordem
          example: '67196803cf514b08892a7d26'
        orderId: 
          type: integer
          description: Identificador da ordem
          example: 12345
        createdAt: 
          type: string
          format: date-time
          description: Data de criação da ordem
          example: '2024-11-01T19:35:41.00'
        historyCreatedAt: 
          type: string
          format: date-time
          description: Data de criação do histórico da ordem
          example: '2024-11-01T19:35:41.00'
        amount: 
          type: number
          description: Valor total da ordem
          example: 250.25
        status: 
          type: string
          description: Status da ordem
          example: CREATED
        name:
          type: string
          description: Nome do cliente
          example: 'John Doe I'
        cpf:
          type: string
          description: CPF do cliente
          example: '12345678901'
        address:
          type: string
          description: Endereço complexo do cliente
          example: 'Rua x, 100 - Bairro x'
        postalCode:
          type: string
          description: Código postal(CEP) do cliente
          example: '12345678'
        city:
          type: string
          description: Cidade do cliente
          example: 'Limeiras'
        state:
          type: string
          description: Unidade federativa que representa o estado do cliente
          example: 'SP'
        attemptedPaymentAt:
          type: string
          format: date-time
          description: Unidade federativa que representa o estado do cliente
          example: '2024-11-01T19:35:41.00'
        items:
          type: array
          description: Items que compõe a ordem.
          items:
            $ref: "#/components/schemas/OrderItemDto-response"       

    OrderItemDto-response:
      type: object
      properties:
        name:
          type: string
          description: Nome do item
          example: 'RTX 1600'
        description:
          type: string
          description: Descrição do item
          example: 'Placa de vídeo RTX 1600 gamer de alta resolução'
        unityPrice:
          type: number
          description: Valor unitário do ítem
          example: 2400.25
        count:
          type: integer
          description: Quantidade do ítem
          example: 2
